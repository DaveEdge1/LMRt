Visualization functionalities
=============================

In this tutorial, we demonstrate the visualization functionalities based
on our 1st reconstruction. Note that these functionalities are still in
a working-in-process, preliminary stage.

.. code:: ipython3

    %load_ext autoreload
    %autoreload 2
    
    import LMRt
    import os
    import numpy as np
    import pandas as pd
    import xarray as xr

Plot the whole loaded proxy database
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: ipython3

    job_dirpath = './testcases/PAGES2k_CCSM4_GISTEMP/recon/'
    job = pd.read_pickle(os.path.join(job_dirpath, 'job.pkl'))
    fig, ax = job.proxydb.plot()


.. parsed-literal::

    /Users/fzhu/Apps/miniconda3/envs/presto/lib/python3.8/site-packages/cartopy/mpl/geoaxes.py:387: MatplotlibDeprecationWarning: 
    The 'inframe' parameter of draw() was deprecated in Matplotlib 3.3 and will be removed two minor releases later. Use Axes.redraw_in_frame() instead. If any parameter follows 'inframe', they should be passed as keyword, not positionally.
      return matplotlib.axes.Axes.draw(self, renderer=renderer,



.. image:: quickstart_visualization-Copy1_files/quickstart_visualization-Copy1_4_1.png


Plot a specific proxy record
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: ipython3

    fig, ax = job.proxydb.records['Ocn_103'].plot()



.. image:: quickstart_visualization-Copy1_files/quickstart_visualization-Copy1_6_0.png


Plot a prior/obs field
~~~~~~~~~~~~~~~~~~~~~~

.. code:: ipython3

    fig, ax = job.prior.fields['tas'].plot(idx_t=-1)


.. parsed-literal::

    /Users/fzhu/Github/LMRt/LMRt/visual.py:218: MatplotlibDeprecationWarning: The 'extend' parameter to Colorbar has no effect because it is overridden by the mappable; it is deprecated since 3.3 and will be removed two minor releases later.
      cbar = fig.colorbar(im, ax=ax, orientation=cbar_orientation, pad=cbar_pad, aspect=cbar_aspect, extend=extend,
    /Users/fzhu/Apps/miniconda3/envs/presto/lib/python3.8/site-packages/cartopy/mpl/geoaxes.py:387: MatplotlibDeprecationWarning: 
    The 'inframe' parameter of draw() was deprecated in Matplotlib 3.3 and will be removed two minor releases later. Use Axes.redraw_in_frame() instead. If any parameter follows 'inframe', they should be passed as keyword, not positionally.
      return matplotlib.axes.Axes.draw(self, renderer=renderer,



.. image:: quickstart_visualization-Copy1_files/quickstart_visualization-Copy1_8_1.png


.. code:: ipython3

    fig, ax = job.obs.fields['tas'].plot(idx_t=-1)



.. image:: quickstart_visualization-Copy1_files/quickstart_visualization-Copy1_9_0.png


Plot the reconstructed series and fields
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: ipython3

    job_dirpath = '/Users/fzhu/Github/LMRt_rework/examples/pages2k_CCSM4/recon'
    res = LMRt.ReconRes(job_dirpath, verbose=True)


.. parsed-literal::

    recon_paths: ['/Users/fzhu/Github/LMRt_rework/examples/pages2k_CCSM4/recon/job_r00_recon.nc']
    idx_paths: ['/Users/fzhu/Github/LMRt_rework/examples/pages2k_CCSM4/recon/job_r00_idx.pkl']
    job_path: /Users/fzhu/Github/LMRt_rework/examples/pages2k_CCSM4/recon/job.pkl


.. code:: ipython3

    res.get_vars(['tas', 'nino3.4'], verbose=True)


.. parsed-literal::

    [1m[30mLMRt: res.get_var() >>> loading variable: tas[0m
    [1m[30mLMRt: res.get_var() >>> loading variable: nino3.4[0m
    [1m[32mLMRt: res.get_var() >>> res.vars filled w/ varnames: ['tas', 'nino3.4'] and "year | lat | lon"[0m


.. code:: ipython3

    fig, ax = res.vars['nino3.4'].plot_envelope(xlim=[850, 2000])



.. image:: quickstart_visualization-Copy1_files/quickstart_visualization-Copy1_13_0.png


.. code:: ipython3

    fig, ax = res.vars['tas'].field_list[0].plot()


.. parsed-literal::

    /Users/fzhu/Github/LMRt/LMRt/visual.py:218: MatplotlibDeprecationWarning: The 'extend' parameter to Colorbar has no effect because it is overridden by the mappable; it is deprecated since 3.3 and will be removed two minor releases later.
      cbar = fig.colorbar(im, ax=ax, orientation=cbar_orientation, pad=cbar_pad, aspect=cbar_aspect, extend=extend,
    /Users/fzhu/Apps/miniconda3/envs/presto/lib/python3.8/site-packages/cartopy/mpl/geoaxes.py:387: MatplotlibDeprecationWarning: 
    The 'inframe' parameter of draw() was deprecated in Matplotlib 3.3 and will be removed two minor releases later. Use Axes.redraw_in_frame() instead. If any parameter follows 'inframe', they should be passed as keyword, not positionally.
      return matplotlib.axes.Axes.draw(self, renderer=renderer,



.. image:: quickstart_visualization-Copy1_files/quickstart_visualization-Copy1_14_1.png


Plot validation of the reconstructed field against a target field
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: ipython3

    ds = LMRt.Dataset().load_nc(
        {'tas':'./testcases/PAGES2k_CCSM4_GISTEMP/data/obs/tas_sfc_Amon_20CR_185101-201112.nc'},
        anom_period=[1951, 1980],
        varname_dict={'tas': 'tas'}
    )
    target_fd = ds.fields['tas']
    target_fd = target_fd.seasonalize(list(range(1, 13)))

.. code:: ipython3

    corr_fd = res.vars['tas'].validate(target_fd, stat='corr')
    fig, ax = corr_fd.plot()


.. parsed-literal::

    Calculating metric: corr: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 42/42 [00:16<00:00,  2.58it/s]
    /Users/fzhu/Apps/miniconda3/envs/presto/lib/python3.8/site-packages/numpy/core/fromnumeric.py:3372: RuntimeWarning: Mean of empty slice.
      return _methods._mean(a, axis=axis, dtype=dtype,
    /Users/fzhu/Apps/miniconda3/envs/presto/lib/python3.8/site-packages/numpy/core/_methods.py:170: RuntimeWarning: invalid value encountered in double_scalars
      ret = ret.dtype.type(ret / rcount)
    /Users/fzhu/Github/LMRt/LMRt/visual.py:218: MatplotlibDeprecationWarning: The 'extend' parameter to Colorbar has no effect because it is overridden by the mappable; it is deprecated since 3.3 and will be removed two minor releases later.
      cbar = fig.colorbar(im, ax=ax, orientation=cbar_orientation, pad=cbar_pad, aspect=cbar_aspect, extend=extend,
    /Users/fzhu/Apps/miniconda3/envs/presto/lib/python3.8/site-packages/cartopy/mpl/geoaxes.py:387: MatplotlibDeprecationWarning: 
    The 'inframe' parameter of draw() was deprecated in Matplotlib 3.3 and will be removed two minor releases later. Use Axes.redraw_in_frame() instead. If any parameter follows 'inframe', they should be passed as keyword, not positionally.
      return matplotlib.axes.Axes.draw(self, renderer=renderer,



.. image:: quickstart_visualization-Copy1_files/quickstart_visualization-Copy1_17_1.png


.. code:: ipython3

    R2_fd = res.vars['tas'].validate(target_fd, stat='R2')
    fig, ax = R2_fd.plot()


.. parsed-literal::

    Calculating metric: R2: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 42/42 [00:16<00:00,  2.55it/s]
    /Users/fzhu/Apps/miniconda3/envs/presto/lib/python3.8/site-packages/numpy/core/fromnumeric.py:3372: RuntimeWarning: Mean of empty slice.
      return _methods._mean(a, axis=axis, dtype=dtype,
    /Users/fzhu/Apps/miniconda3/envs/presto/lib/python3.8/site-packages/numpy/core/_methods.py:170: RuntimeWarning: invalid value encountered in double_scalars
      ret = ret.dtype.type(ret / rcount)
    /Users/fzhu/Github/LMRt/LMRt/visual.py:218: MatplotlibDeprecationWarning: The 'extend' parameter to Colorbar has no effect because it is overridden by the mappable; it is deprecated since 3.3 and will be removed two minor releases later.
      cbar = fig.colorbar(im, ax=ax, orientation=cbar_orientation, pad=cbar_pad, aspect=cbar_aspect, extend=extend,
    /Users/fzhu/Apps/miniconda3/envs/presto/lib/python3.8/site-packages/cartopy/mpl/geoaxes.py:387: MatplotlibDeprecationWarning: 
    The 'inframe' parameter of draw() was deprecated in Matplotlib 3.3 and will be removed two minor releases later. Use Axes.redraw_in_frame() instead. If any parameter follows 'inframe', they should be passed as keyword, not positionally.
      return matplotlib.axes.Axes.draw(self, renderer=renderer,



.. image:: quickstart_visualization-Copy1_files/quickstart_visualization-Copy1_18_1.png


.. code:: ipython3

    ce_fd = res.vars['tas'].validate(target_fd, stat='CE')
    fig, ax = ce_fd.plot()


.. parsed-literal::

    Calculating metric: CE: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 42/42 [00:01<00:00, 23.60it/s]



.. image:: quickstart_visualization-Copy1_files/quickstart_visualization-Copy1_19_1.png


Plot validation of the reconstructed series against a target field/series
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: ipython3

    corr_nino34_fd = res.vars['nino3.4'].validate(target_fd, stat='corr')
    fig, ax = corr_nino34_fd.plot()


.. parsed-literal::

    Calculating metric: corr: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 91/91 [01:41<00:00,  1.11s/it]
    /Users/fzhu/Apps/miniconda3/envs/presto/lib/python3.8/site-packages/numpy/core/fromnumeric.py:3372: RuntimeWarning: Mean of empty slice.
      return _methods._mean(a, axis=axis, dtype=dtype,
    /Users/fzhu/Apps/miniconda3/envs/presto/lib/python3.8/site-packages/numpy/core/_methods.py:170: RuntimeWarning: invalid value encountered in double_scalars
      ret = ret.dtype.type(ret / rcount)
    /Users/fzhu/Github/LMRt_rework/LMRt/visual.py:218: MatplotlibDeprecationWarning: The 'extend' parameter to Colorbar has no effect because it is overridden by the mappable; it is deprecated since 3.3 and will be removed two minor releases later.
      cbar = fig.colorbar(im, ax=ax, orientation=cbar_orientation, pad=cbar_pad, aspect=cbar_aspect, extend=extend,
    /Users/fzhu/Apps/miniconda3/envs/presto/lib/python3.8/site-packages/cartopy/mpl/geoaxes.py:387: MatplotlibDeprecationWarning: 
    The 'inframe' parameter of draw() was deprecated in Matplotlib 3.3 and will be removed two minor releases later. Use Axes.redraw_in_frame() instead. If any parameter follows 'inframe', they should be passed as keyword, not positionally.
      return matplotlib.axes.Axes.draw(self, renderer=renderer,



.. image:: quickstart_visualization-Copy1_files/quickstart_visualization-Copy1_21_1.png


.. code:: ipython3

    from scipy.io import loadmat
    
    data = loadmat('../examples/pages2k_CCSM4/data/obs/NINO34_BC09.mat')
    syr, eyr = 1873, 2000
    nyr = eyr-syr+1
    nino34 = np.zeros(nyr)
    for i in range(nyr):
        nino34[i] = np.mean(data['nino34'][i*12:12+i*12])
        
    target_series = LMRt.Series(time=np.arange(syr, eyr+1), value=nino34, label='BC09')
    fig, ax = target_series.plot()



.. image:: quickstart_visualization-Copy1_files/quickstart_visualization-Copy1_22_0.png


.. code:: ipython3

    fig, ax = res.vars['nino3.4'].validate(target_series, verbose=True).plot(xlim=[1880, 2000])


.. parsed-literal::

    [1m[36mLMRt: res.ReconSeries.validate() >>> valid_period = [1880, 2000][0m



.. image:: quickstart_visualization-Copy1_files/quickstart_visualization-Copy1_23_1.png


Plot validation of the reconstructed field against the whole proxy database or a single proxy record
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: ipython3

    fig, ax = res.vars['tas'].validate(job.proxydb, stat='R2').plot()


.. parsed-literal::

    /Users/fzhu/Apps/miniconda3/envs/presto/lib/python3.8/site-packages/cartopy/mpl/geoaxes.py:387: MatplotlibDeprecationWarning: 
    The 'inframe' parameter of draw() was deprecated in Matplotlib 3.3 and will be removed two minor releases later. Use Axes.redraw_in_frame() instead. If any parameter follows 'inframe', they should be passed as keyword, not positionally.
      return matplotlib.axes.Axes.draw(self, renderer=renderer,



.. image:: quickstart_visualization-Copy1_files/quickstart_visualization-Copy1_25_1.png


.. code:: ipython3

    fig, ax = res.vars['tas'].validate(job.proxydb.records['Ocn_103'], stat='corr').plot()


.. parsed-literal::

    /Users/fzhu/Apps/miniconda3/envs/presto/lib/python3.8/site-packages/cartopy/mpl/geoaxes.py:387: MatplotlibDeprecationWarning: 
    The 'inframe' parameter of draw() was deprecated in Matplotlib 3.3 and will be removed two minor releases later. Use Axes.redraw_in_frame() instead. If any parameter follows 'inframe', they should be passed as keyword, not positionally.
      return matplotlib.axes.Axes.draw(self, renderer=renderer,



.. image:: quickstart_visualization-Copy1_files/quickstart_visualization-Copy1_26_1.png


